---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  EC2 Instance running windows AMI for Magic Online

Parameters:

  InstanceType:
    Type: String
    AllowedValues:
      - t2.medium
  Key:
    Type: AWS::EC2::KeyPair::KeyName

  Subnet:
    Type: AWS::EC2::Subnet::Id

  BYOSubnet:
    Type: String
    AllowedValues:
      - True
      - False

  VPC:
    Type: AWS::EC2::VPC::Id

  BYOVPC:
    Type: String
    AllowedValues:
      - True
      - False


  Subnet:
    Type: AWS::EC2::SecurityGroup::Id

  BYOSG:
    Type: String
    AllowedValues:
      - True
      - False

#Mappings:

Conditions:
  BYOSubnet: !Equals [!Ref BYOSubnet,True]
  BYOSG: !Equals [!Ref BYOSG,True]
  MakeSG: !Equals [!Ref BYOSG,False]
  BYOVPC: !Equals [!Ref BYOVPC,True]

Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
      ImageId: ami-0703fc157f1b87f6c
      InstanceType: !Ref InstanceType
      KeyName: !Ref Key
      SecurityGroupIds:                # optional, list of String
        - !If
          - BYOSG
          - !Ref BYOSG
          - !Ref SG
      SubnetId: !If
        - BYOSubnet
        - !Ref Subnet
        - !ImportValue MagicMachinePublicSubnet
  SG:
    Type: AWS::EC2::SecurityGroup
    Condition: MakeSG
    Properties:
      GroupDescription: Allows RDP to all internet.
      GroupName: MagicMachineSG
      SecurityGroupIngress:                # optional, list of Ingress
        - CidrIp: 0.0.0.0/0
          FromPort: 3389
          IpProtocol: tcp
          ToPort: 3389
      VpcId: !If
        - BYOVPC
        - VPC
        - !ImportValue MagicMachineVPC

Outputs:
  InstanceId:
    Value: !Ref Instance
  InstancePublicDnsName:
    Value: !GetAtt Instance.PublicDnsName
